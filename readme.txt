Builder ( Object  Creational )
- การพับกระดาษเป็นรูปนกกระเรียน และบอกให้ไปพับรูปสิงโต โดยการไปบอกขั้รตอนการพับ
- การซื้อตู้มาประกอบ ถ้าเราไม่มีวิธีประกอบ เราก็จะประกอบตู้ไม่ได้ ให้มองเป็นการประกอบที่ละส่วน เช่น ขาซ้าย ขาขวา หน้าหลัง 
  แต่ละส่วนถือว่าเป็น Object (นิยามของ Object : ชื่อ ประเภท คุณลักษณะ พฤติกรรม )
- เกี่ยวกับการสร้าง Object การรวม Object โดยขั้นตอนย่อยๆ (BuildPart())
- ย่อยขั้นตอนเพื่อสร้าง Object

ข้อดี
- ย่อยขั้นตอนการสร้าง Object ที่วุ่นวายให้ง่าย
- สามารถเปลี่ยนแปลงแต่ละส่วนย่อยได้โดยที่ไม่กระทบแต่ละส่วน

ข้อเสีย
- ใช้ชื่อของแต่ละส่วนประกอบว่าอะไร และแต่ละส่วนต้องทำงานได้เหมือน Object ทั่วไป
- ต้องคิดว่าแต่ละส่วนอาจมีการเปลี่ยนแปลงในอนาคต

Iterator ( Object Behavioural )
- เกิดจากการวนใน collection ต่างๆ เช่น array arrayList stack queue HashMap 
- ไม่รู้ว่าเก็บข้อมูลแบบใด แต่ต้องได้ข้อมูลจากการขอข้อมูล โดยการเรียกผ่าน Interface เช่น ใน Java คือ .next() จะเรียกตัวต่อไป
- ให้มองการเก็บข้อมูลเป็นแบบทั่วไป

ข้อดี
- user ไม่ต้องสนในวิธีการวน
- ถ้าเราเป็นคนเขียน Iterator สามารถเปลี่ยนระหว่างทางได้

ข้อเสีย
- user ไม่สามารถรู้ถึงประสิทธิภาพของ Iterator

Chain of Responsibilities ( Object Behavioural )
- ส่งต่อควมรับผิดชอบไปเรื่อยๆ
- ทำซ้ำเยอะๆ Composite
- รายงานปัญหา ข้าวไข่ดาว ผู้ผลิดจะส่งเรื่องไปให้แต่ละฝ่ายเรื่อยๆ
- การใช้ exception ใน Java จะเรียกไปเรื่อยๆ

ข้อดี
- แม่สามารถแบ่งความรับผิดชอบให้ลูกได้ เช่น บริษัทสามารถแบ่งความรับผิดชอบในแต่ละฝ่ายดูแต่ละฝ่ายส่งต่อให้แผนกย่อย

ข้อเสีย
- การันตีไม่ได้ว่าลูกมีการรับเรื่องหรือไม่
